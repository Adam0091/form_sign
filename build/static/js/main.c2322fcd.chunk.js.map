{"version":3,"sources":["components/SignUp/SignUp.jsx","components/registration/Registration.jsx","App.js","serviceWorker.js","index.js","components/registration/Registration.module.css","components/SignUp/SignUp.module.css"],"names":["SignUp","props","className","state","classNameAnimation","style","form","form_name","form_user_email","type","placeholder","form_user_password","form_checkbox_remember_me","name","id","form_button","from_forgot_password","to","form_link","onClick","ReactDOM","render","StrictMode","document","getElementById","setTimeout","Registration","form_user_name","form_user_phone_number","form_checkbox_gender","form_checkbox_gender_man","for","form_checkbox_gender_woman","App","page","Boolean","window","location","hostname","match","rerender","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.c2322fcd.chunk.js","sourcesContent":["import React from 'react';\r\nimport style from './SignUp.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport App from \"./../../App\";\r\nimport ReactDOM from 'react-dom';\r\nimport Registration from '../registration/Registration';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\n\r\n\r\n\r\nconst SignUp = (props) =>{\r\n\r\n    let onclickLink = () => {\r\n        props.state.classNameAnimation = \"divAnimationLeft\";\r\n        ReactDOM.render(\r\n        <React.StrictMode>\r\n            <App state = {props.state}/>\r\n        </React.StrictMode>,\r\n        document.getElementById('root')\r\n        );\r\n        setTimeout(() =>{\r\n            props.state.classNameAnimation = \"divAnimationRight\";\r\n            ReactDOM.render(\r\n                <React.StrictMode>\r\n                    <BrowserRouter>\r\n                        <Registration state = {props.state}/>\r\n                    </BrowserRouter>\r\n                </React.StrictMode>,\r\n                document.getElementById('root')\r\n            );\r\n        },250);\r\n    }\r\n\r\n    return (\r\n        <div className={props.state.classNameAnimation}>\r\n            <div className={style.form}>\r\n                <div className={style.form_name}>Вход</div>\r\n                <div className={style.form_user_email}>\r\n                    <input type='email' placeholder='E-mail'/>\r\n                </div>\r\n                <div className={style.form_user_password}>\r\n                    <input type='password' placeholder='Password'/>\r\n                </div>\r\n                <div className={style.form_checkbox_remember_me}>\r\n                    <input type=\"checkbox\" name=\"\" id=\"\"/><label>Запомнить меня</label>\r\n                </div>\r\n                <div className={style.form_button}>\r\n                    <button>Войти</button>\r\n                </div>\r\n                <div className={style.from_forgot_password}>\r\n                    <NavLink to=''>Восстановить пароль</NavLink>\r\n                </div>\r\n            </div>\r\n            <div className={style.form_link}>\r\n               <NavLink to='' onClick={onclickLink} ><span>Зарегистрируйтесь</span> для полного спектра услуг</NavLink> \r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignUp;","import React from 'react';\r\nimport style from './Registration.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport SignUp from '../SignUp/SignUp';\r\nimport ReactDOM from 'react-dom';\r\nimport App from \"./../../App\";\r\n\r\n\r\nconst Registration = (props) =>{\r\n\r\n    let onClickLink = () =>{\r\n        props.state.classNameAnimation = \"divAnimationLeft\";\r\n        ReactDOM.render(\r\n        <React.StrictMode>\r\n            <BrowserRouter>\r\n                <Registration state = {props.state}/>\r\n            </BrowserRouter>\r\n        </React.StrictMode>,\r\n        document.getElementById('root')\r\n        );\r\n        setTimeout(() =>{\r\n            props.state.classNameAnimation = \"divAnimationRight\";\r\n            ReactDOM.render(\r\n                <React.StrictMode>\r\n                    <BrowserRouter>\r\n                        <SignUp  state = {props.state}/>\r\n                    </BrowserRouter>\r\n                </React.StrictMode>,\r\n                document.getElementById('root')\r\n            );\r\n        },250);\r\n    }\r\n    \r\n    return (\r\n        <div className={props.state.classNameAnimation}>\r\n            <div className={style.form}>\r\n                <div className={style.form_name}>Регистрация</div>\r\n                <div className={style.form_user_name}>\r\n                    <input type='text' placeholder='Имя'/>\r\n                </div>\r\n                <div className={style.form_user_phone_number}>\r\n                    <input type='tel' placeholder='Телефон'/>\r\n                </div>\r\n                <div className={style.form_user_email}>\r\n                    <input type='email' placeholder='E-mail'/>\r\n                </div>\r\n                <div className={style.form_user_password}>\r\n                    <input type='password' placeholder='Password'/>\r\n                </div>\r\n                <div className={style.form_checkbox_gender}>\r\n                    <div className={style.form_checkbox_gender_man}>\r\n                        <input type='checkbox'/><label for=\"man\">Мужчина</label>\r\n                    </div>\r\n                    <div className={style.form_checkbox_gender_woman}>\r\n                        <input type='checkbox'/><label for=\"woman\">Женщина</label>\r\n                    </div>\r\n                </div>  \r\n                <div className={style.form_button}>\r\n                    <button>Зарегистрироваться</button>\r\n                </div>\r\n            </div>\r\n            <div className={style.form_link}>\r\n               <NavLink to='/' onClick = {onClickLink}>Уже зарегистрировались?<span>Войти</span></NavLink> \r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Registration;","import React from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport Registration from './components/registration/Registration';\r\nimport SignUp from './components/SignUp/SignUp';\r\n\r\nfunction App(props) {\r\n\r\n  let page  =  <SignUp state = {props.state}/>\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <div className = 'app_wrapper'>\r\n          {page} \r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nvar state = {\r\n  classNameAnimation: \"\",\r\n}\r\n\r\n\r\nexport let rerender = (state) =>{\r\n  ReactDOM.render(\r\n    <React.StrictMode>\r\n      <App state = {state}/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n  );\r\n}\r\n\r\nrerender(state);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Registration_form__iz5E4\",\"form_name\":\"Registration_form_name__1c5hO\",\"form_user_name\":\"Registration_form_user_name__2NxoF\",\"form_user_phone_number\":\"Registration_form_user_phone_number__3ey7M\",\"form_user_email\":\"Registration_form_user_email__23iOF\",\"form_user_password\":\"Registration_form_user_password__1UDl2\",\"form_button\":\"Registration_form_button__1Km1C\",\"form_checkbox_gender\":\"Registration_form_checkbox_gender__4XdEm\",\"form_checkbox_gender_man\":\"Registration_form_checkbox_gender_man__29RZO\",\"form_checkbox_gender_woman\":\"Registration_form_checkbox_gender_woman__3O4OQ\",\"form_link\":\"Registration_form_link__3_gqy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"SignUp_form__eLU6s\",\"form_name\":\"SignUp_form_name__3kyzu\",\"form_user_email\":\"SignUp_form_user_email__3mDpD\",\"form_user_password\":\"SignUp_form_user_password__50qhM\",\"form_checkbox_remember_me\":\"SignUp_form_checkbox_remember_me__x_0_R\",\"form_button\":\"SignUp_form_button__2Otza\",\"from_forgot_password\":\"SignUp_from_forgot_password__30cKA\",\"form_link\":\"SignUp_form_link__3rvHd\"};"],"sourceRoot":""}