{"version":3,"sources":["components/registration/Registration.jsx","components/SignUp/SignUp.jsx","App.js","serviceWorker.js","index.js","components/registration/Registration.module.css","components/SignUp/SignUp.module.css"],"names":["Registration","props","className","state","classNameAnimation","style","form","form_name","form_user_name","required","type","placeholder","form_user_phone_number","form_user_email","form_user_password","form_checkbox_gender","for","form_button","form_link","to","onClick","ReactDOM","render","StrictMode","document","getElementById","setTimeout","SignUp","form_checkbox_remember_me","name","id","from_forgot_password","App","Boolean","window","location","hostname","match","rerender","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.d2a558e4.chunk.js","sourcesContent":["import React from 'react';\nimport style from './Registration.module.css';\nimport { NavLink } from 'react-router-dom';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport SignUp from '../SignUp/SignUp';\nimport ReactDOM from 'react-dom';\n\n\nconst Registration = (props) =>{\n\n    let onClickLink = () =>{\n        props.state.classNameAnimation = \"divAnimationLeft\";\n        ReactDOM.render(\n        <React.StrictMode>\n            <BrowserRouter>\n                <Registration state = {props.state}/>\n            </BrowserRouter>\n        </React.StrictMode>,\n        document.getElementById('root')\n        );\n        setTimeout(() =>{\n            props.state.classNameAnimation = \"divAnimationRight\";\n            ReactDOM.render(\n                <React.StrictMode>\n                    <BrowserRouter>\n                        <SignUp  state = {props.state}/>\n                    </BrowserRouter>\n                </React.StrictMode>,\n                document.getElementById('root')\n            );\n        },250);\n    }\n    \n    return (\n        <div className={props.state.classNameAnimation}>\n            <div className={style.form}>\n                <div className={style.form_name}>Регистрация</div>\n                <div className={style.form_user_name}>\n                    <input required type='text' placeholder='Имя'/>\n                </div>\n                <div className={style.form_user_phone_number}>\n                    <input required type='tel' placeholder='Телефон' />\n                </div>\n                <div className={style.form_user_email}>\n                    <input required type='email' placeholder='E-mail'/>\n                </div>\n                <div className={style.form_user_password}>\n                    <input required type='password' placeholder='Password'/>\n                </div>\n                <div className={style.form_checkbox_gender}>\n\n                        <input type='checkbox'/><label for=\"man\">Мужчина</label>\n\n\n                        <input type='checkbox'/><label for=\"woman\">Женщина</label>\n\n                </div>  \n                <div className={style.form_button}>\n                    <button>Зарегистрироваться</button>\n                </div>\n            </div>\n            <div className={style.form_link}>\n               <NavLink to='/' onClick = {onClickLink}>Уже зарегистрировались? <span>Войти</span></NavLink> \n            </div>\n        </div>\n    );\n};\n\nexport default Registration;","import React from 'react';\nimport style from './SignUp.module.css';\nimport { NavLink } from 'react-router-dom';\nimport App from \"./../../App\";\nimport ReactDOM from 'react-dom';\nimport Registration from '../registration/Registration';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\n\n\nconst SignUp = (props) =>{\n\n    let onclickLink = () => {\n        props.state.classNameAnimation = \"divAnimationLeft\";\n        ReactDOM.render(\n        <React.StrictMode>\n            <App state = {props.state}/>\n        </React.StrictMode>,\n        document.getElementById('root')\n        );\n        setTimeout(() =>{\n            props.state.classNameAnimation = \"divAnimationRight\";\n            ReactDOM.render(\n                <React.StrictMode>\n                    <BrowserRouter>\n                        <Registration state = {props.state}/>\n                    </BrowserRouter>\n                </React.StrictMode>,\n                document.getElementById('root')\n            );\n        },250);\n    }\n\n    // maybe form instead div № 1                                                                                                                                            \n    return (\n        <div className={props.state.classNameAnimation}> \n            <div className={style.form}>\n                <div className={style.form_name}>Вход</div>\n                <div className={style.form_user_email}>\n                    <input required type='email' placeholder='E-mail'/>\n                </div>\n                <div className={style.form_user_password}>\n                    <input required type='password' placeholder='Password'/>\n                </div>\n                <div className={style.form_checkbox_remember_me}>\n                    <input type=\"checkbox\" name=\"\" id=\"\"/><label>Запомнить меня</label>\n                </div>\n                <div className={style.form_button}>\n                    <button>Войти</button>\n                </div>\n                <div className={style.from_forgot_password}>\n                    <NavLink to=''>Восстановить пароль</NavLink>\n                </div>\n            </div>\n            <div className={style.form_link}>\n               <NavLink to='' onClick={onclickLink} ><span>Зарегистрируйтесь</span> для полного спектра услуг</NavLink> \n            </div>\n        </div>\n    );\n};\n\nexport default SignUp;","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport SignUp from './components/SignUp/SignUp';\n\nfunction App(props) {\n\n  return (\n    <BrowserRouter>\n      <div className = 'app_wrapper'>\n        <SignUp state = {props.state}/>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nvar state = {\n  classNameAnimation: \"\",\n}\n\n\nexport let rerender = (state) =>{\n  ReactDOM.render(\n    <React.StrictMode>\n      <App state = {state}/>\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n}\n\nrerender(state);\n\nserviceWorker.unregister();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Registration_form__2F1ha\",\"form_name\":\"Registration_form_name__Zj060\",\"form_user_name\":\"Registration_form_user_name__3pRMb\",\"form_user_phone_number\":\"Registration_form_user_phone_number__7Vh3S\",\"form_user_email\":\"Registration_form_user_email__1mqen\",\"form_user_password\":\"Registration_form_user_password__3CfXk\",\"form_button\":\"Registration_form_button__3tD6M\",\"form_checkbox_gender\":\"Registration_form_checkbox_gender__1j7LB\",\"form_link\":\"Registration_form_link__37-vk\",\"from_forgot_password\":\"Registration_from_forgot_password__1MmAk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"SignUp_form__21rBv\",\"form_name\":\"SignUp_form_name__TQBIV\",\"form_user_email\":\"SignUp_form_user_email__YaGaO\",\"form_user_password\":\"SignUp_form_user_password__11TeA\",\"form_checkbox_remember_me\":\"SignUp_form_checkbox_remember_me__F2fFX\",\"form_button\":\"SignUp_form_button__1HbEa\",\"from_forgot_password\":\"SignUp_from_forgot_password__2yRGp\",\"form_link\":\"SignUp_form_link__3M8o4\"};"],"sourceRoot":""}